{"ast":null,"code":"import _slicedToArray from \"C:\\\\Users\\\\manan\\\\Desktop\\\\Project\\\\upsell-boost902\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"C:\\\\Users\\\\manan\\\\Desktop\\\\Project\\\\upsell-boost902\\\\src\\\\comparison\\\\Comparison.js\";\nimport { CssBaseline, Divider, Grid, Paper, Typography } from '@material-ui/core';\nimport { makeStyles } from '@material-ui/styles';\nimport React, { Fragment, useState } from 'react';\nimport ResponsiveBarChart from '../shared/components/charts/ResponsiveBarChart';\nimport ContentLayout from '../shared/components/layouts/content/ContentLayout';\nimport CustomPaper from '../shared/components/layouts/content/CustomPaper';\nimport Loading from '../shared/components/loading/Loading';\nimport PageTitle from '../shared/components/page-title/PageTitle';\nimport CheckboxList from './components/CheckboxList';\n\nconst numeral = require('numeral');\n\nnumeral.defaultFormat('0,000');\nconst monthRange = ['01 January 2019', '01 February 2019', '01 March 2019', '01 April 2019', '01 May 2019', '01 June 2019', '01 July 2019', '01 August 2019', '01 September 2019', '01 October 2019', '01 November 2019', '01 December 2019'];\nconst useStyles = makeStyles(theme => ({\n  root: {\n    backgroundColor: theme.palette.grey['100']\n  },\n  grid: {\n    margin: \"0 \".concat(theme.spacing(1), \"px\"),\n    [theme.breakpoints.down('sm')]: {\n      width: 'calc(100% - 20px)'\n    }\n  },\n  paper: {\n    padding: theme.spacing(1),\n    margin: theme.spacing(1),\n    textAlign: 'left',\n    color: theme.palette.text.secondary\n  },\n  chartWrapper: {\n    padding: theme.spacing(3),\n    margin: theme.spacing(2),\n    textAlign: 'left',\n    color: theme.palette.text.secondary\n  }\n}));\n\nconst Comparison = () => {\n  const classes = useStyles();\n  const DATA = [{\n    month: 'January',\n    target: 20,\n    score: 10\n  }, {\n    month: 'February',\n    target: 25,\n    score: 20\n  }];\n\n  const _useState = useState(3),\n        _useState2 = _slicedToArray(_useState, 2),\n        period = _useState2[0],\n        setPeriod = _useState2[1];\n\n  const _useState3 = useState(0),\n        _useState4 = _slicedToArray(_useState3, 2),\n        start = _useState4[0],\n        setStart = _useState4[1];\n\n  const _useState5 = useState(false),\n        _useState6 = _slicedToArray(_useState5, 2),\n        loading = _useState6[0],\n        setLoading = _useState6[1];\n\n  const _useState7 = useState(DATA),\n        _useState8 = _slicedToArray(_useState7, 2),\n        data = _useState8[0],\n        setData = _useState8[1];\n\n  const _React$useState = React.useState([0]),\n        _React$useState2 = _slicedToArray(_React$useState, 2),\n        checked = _React$useState2[0],\n        setChecked = _React$useState2[1];\n\n  const months = ['January', 'February', 'March', 'April', 'May', 'June', 'July', 'August', 'September', 'October', 'November', 'December'];\n  const comparisonValues = ['Expected', 'Scored'];\n\n  const handleToggle = value => () => {\n    const currentIndex = checked.indexOf(value);\n    const newChecked = [...checked];\n\n    if (currentIndex === -1) {\n      newChecked.push(value);\n    } else {\n      newChecked.splice(currentIndex, 1);\n    }\n\n    setChecked(newChecked);\n  };\n\n  const handleChangePeriod = (event, value) => {\n    setPeriod(value);\n    setLoading(false);\n    updateValues();\n  };\n\n  const handleChangeStart = (event, value) => {\n    setStart(value);\n    setLoading(false);\n    updateValues();\n  };\n\n  const updateValues = () => {\n    const data = Array.from({\n      length: period + start\n    }, (value, i) => {\n      const delayed = i < start;\n      return {\n        name: monthRange[i]\n      };\n    });\n    setData(data);\n  };\n\n  return React.createElement(Fragment, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 132\n    },\n    __self: this\n  }, React.createElement(CssBaseline, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 133\n    },\n    __self: this\n  }), React.createElement(ContentLayout, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 135\n    },\n    __self: this\n  }, React.createElement(PageTitle, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 136\n    },\n    __self: this\n  }, \" \"), React.createElement(CustomPaper, {\n    title: \"SelectValue\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 137\n    },\n    __self: this\n  }, React.createElement(CheckboxList, {\n    data: comparisonValues,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 138\n    },\n    __self: this\n  })), React.createElement(CustomPaper, {\n    title: \"SelectMonths\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 141\n    },\n    __self: this\n  }, React.createElement(CheckboxList, {\n    data: months,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 142\n    },\n    __self: this\n  }))), React.createElement(Grid, {\n    container: true,\n    spacing: 4,\n    justify: \"center\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 146\n    },\n    __self: this\n  }, React.createElement(Grid, {\n    item: true,\n    xs: 12,\n    md: 12,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 147\n    },\n    __self: this\n  }, React.createElement(Paper, {\n    className: classes.paper,\n    style: {\n      position: 'relative'\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 148\n    },\n    __self: this\n  }, React.createElement(Loading, {\n    loading: loading,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 149\n    },\n    __self: this\n  }), React.createElement(\"div\", {\n    className: loading ? classes.loadingState : '',\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 150\n    },\n    __self: this\n  }, React.createElement(Typography, {\n    variant: \"subtitle1\",\n    gutterBottom: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 151\n    },\n    __self: this\n  }, \"Some details\"), React.createElement(Typography, {\n    variant: \"body1\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 154\n    },\n    __self: this\n  }, \"Details about the graph\"), React.createElement(\"div\", {\n    className: classes.chartWrapper,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 156\n    },\n    __self: this\n  }, React.createElement(Typography, {\n    variant: \"h6\",\n    gutterBottom: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 157\n    },\n    __self: this\n  }, \"Comparison By Months\"), React.createElement(Divider, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 160\n    },\n    __self: this\n  }), React.createElement(ResponsiveBarChart, {\n    data: data,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 161\n    },\n    __self: this\n  })))))));\n};\n\nexport default Comparison;","map":{"version":3,"sources":["C:/Users/manan/Desktop/Project/upsell-boost902/src/comparison/Comparison.js"],"names":["CssBaseline","Divider","Grid","Paper","Typography","makeStyles","React","Fragment","useState","ResponsiveBarChart","ContentLayout","CustomPaper","Loading","PageTitle","CheckboxList","numeral","require","defaultFormat","monthRange","useStyles","theme","root","backgroundColor","palette","grey","grid","margin","spacing","breakpoints","down","width","paper","padding","textAlign","color","text","secondary","chartWrapper","Comparison","classes","DATA","month","target","score","period","setPeriod","start","setStart","loading","setLoading","data","setData","checked","setChecked","months","comparisonValues","handleToggle","value","currentIndex","indexOf","newChecked","push","splice","handleChangePeriod","event","updateValues","handleChangeStart","Array","from","length","i","delayed","name","position","loadingState"],"mappings":"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","sourcesContent":["import {\r\n  CssBaseline,\r\n  Divider,\r\n  Grid,\r\n  Paper,\r\n  Typography\r\n} from '@material-ui/core';\r\nimport { makeStyles } from '@material-ui/styles';\r\nimport React, { Fragment, useState } from 'react';\r\nimport ResponsiveBarChart from '../shared/components/charts/ResponsiveBarChart';\r\nimport ContentLayout from '../shared/components/layouts/content/ContentLayout';\r\nimport CustomPaper from '../shared/components/layouts/content/CustomPaper';\r\nimport Loading from '../shared/components/loading/Loading';\r\nimport PageTitle from '../shared/components/page-title/PageTitle';\r\nimport CheckboxList from './components/CheckboxList';\r\nconst numeral = require('numeral');\r\nnumeral.defaultFormat('0,000');\r\n\r\nconst monthRange = [\r\n  '01 January 2019',\r\n  '01 February 2019',\r\n  '01 March 2019',\r\n  '01 April 2019',\r\n  '01 May 2019',\r\n  '01 June 2019',\r\n  '01 July 2019',\r\n  '01 August 2019',\r\n  '01 September 2019',\r\n  '01 October 2019',\r\n  '01 November 2019',\r\n  '01 December 2019'\r\n];\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {\r\n    backgroundColor: theme.palette.grey['100']\r\n  },\r\n  grid: {\r\n    margin: `0 ${theme.spacing(1)}px`,\r\n    [theme.breakpoints.down('sm')]: {\r\n      width: 'calc(100% - 20px)'\r\n    }\r\n  },\r\n  paper: {\r\n    padding: theme.spacing(1),\r\n    margin: theme.spacing(1),\r\n    textAlign: 'left',\r\n    color: theme.palette.text.secondary\r\n  },\r\n  chartWrapper: {\r\n    padding: theme.spacing(3),\r\n    margin: theme.spacing(2),\r\n    textAlign: 'left',\r\n    color: theme.palette.text.secondary\r\n  }\r\n}));\r\n\r\nconst Comparison = () => {\r\n  const classes = useStyles();\r\n  const DATA = [\r\n    {\r\n      month: 'January',\r\n      target: 20,\r\n      score: 10\r\n    },\r\n    {\r\n      month: 'February',\r\n      target: 25,\r\n      score: 20\r\n    }\r\n  ];\r\n\r\n  const [period, setPeriod] = useState(3);\r\n  const [start, setStart] = useState(0);\r\n  const [loading, setLoading] = useState(false);\r\n  const [data, setData] = useState(DATA);\r\n  const [checked, setChecked] = React.useState([0]);\r\n\r\n  const months = [\r\n    'January',\r\n    'February',\r\n    'March',\r\n    'April',\r\n    'May',\r\n    'June',\r\n    'July',\r\n    'August',\r\n    'September',\r\n    'October',\r\n    'November',\r\n    'December'\r\n  ];\r\n\r\n  const comparisonValues = ['Expected', 'Scored'];\r\n\r\n  const handleToggle = value => () => {\r\n    const currentIndex = checked.indexOf(value);\r\n    const newChecked = [...checked];\r\n\r\n    if (currentIndex === -1) {\r\n      newChecked.push(value);\r\n    } else {\r\n      newChecked.splice(currentIndex, 1);\r\n    }\r\n\r\n    setChecked(newChecked);\r\n  };\r\n\r\n  const handleChangePeriod = (event, value) => {\r\n    setPeriod(value);\r\n    setLoading(false);\r\n    updateValues();\r\n  };\r\n\r\n  const handleChangeStart = (event, value) => {\r\n    setStart(value);\r\n    setLoading(false);\r\n    updateValues();\r\n  };\r\n\r\n  const updateValues = () => {\r\n    const data = Array.from({ length: period + start }, (value, i) => {\r\n      const delayed = i < start;\r\n      return {\r\n        name: monthRange[i]\r\n      };\r\n    });\r\n    setData(data);\r\n  };\r\n\r\n  return (\r\n    <Fragment>\r\n      <CssBaseline />\r\n\r\n      <ContentLayout>\r\n        <PageTitle> </PageTitle>\r\n        <CustomPaper title=\"SelectValue\">\r\n          <CheckboxList data={comparisonValues} />\r\n        </CustomPaper>\r\n\r\n        <CustomPaper title=\"SelectMonths\">\r\n          <CheckboxList data={months} />\r\n        </CustomPaper>\r\n      </ContentLayout>\r\n\r\n      <Grid container spacing={4} justify=\"center\">\r\n        <Grid item xs={12} md={12}>\r\n          <Paper className={classes.paper} style={{ position: 'relative' }}>\r\n            <Loading loading={loading} />\r\n            <div className={loading ? classes.loadingState : ''}>\r\n              <Typography variant=\"subtitle1\" gutterBottom>\r\n                Some details\r\n              </Typography>\r\n              <Typography variant=\"body1\">Details about the graph</Typography>\r\n\r\n              <div className={classes.chartWrapper}>\r\n                <Typography variant=\"h6\" gutterBottom>\r\n                  Comparison By Months\r\n                </Typography>\r\n                <Divider />\r\n                <ResponsiveBarChart data={data} />\r\n              </div>\r\n            </div>\r\n          </Paper>\r\n        </Grid>\r\n      </Grid>\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nexport default Comparison;\r\n"]},"metadata":{},"sourceType":"module"}